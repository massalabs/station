// GENERATED BY textFileToGoConst
// GitHub:     github.com/logrusorgru/textFileToGoConst
// input file: html/front/website.js
// generated:  Wed Sep 21 10:06:14 CEST 2022

package website

const JS = "let gWallets = [];\nlet deployers = [];\nlet actualTxType = \"\";\nlet nextFileToUpload;\nlet uploadable = false;\n\n// INIT\ngetWallets();\ngetWebsiteDeployerSC();\ninitializeDefaultWallet();\nsetupModal();\n\n// Write the default wallet text in wallet popover component\nasync function getWebsiteDeployerSC() {\n  let defaultWallet = getDefaultWallet();\n\n  $(\"#website-deployers-table tbody tr\").remove();\n\n  axios\n    .get(\"/my/domains/\" + defaultWallet)\n    .then((websites) => {\n      let count = 0;\n      for (const website of websites.data) {\n        tableInsert(website, count);\n        count++;\n      }\n      deployers = websites.data;\n    })\n    .catch((e) => {\n      console.error(e);\n      errorAlert(getErrorMessage(e.response.data.code));\n    });\n}\n\n// Write the default wallet text in wallet popover component\nfunction initializeDefaultWallet() {\n  let defaultWallet = getDefaultWallet();\n  if (defaultWallet === \"\") {\n    defaultWallet = \"Connect\";\n  }\n  $(\".popover__title\").html(defaultWallet);\n}\n\n// Retrieve the default wallet nickname in cookies\nfunction getDefaultWallet() {\n  let defaultWallet = \"\";\n  const cookies = document.cookie.split(\";\");\n  cookies.forEach((cookie) => {\n    const keyValue = cookie.split(\"=\");\n    if (keyValue[0] === \"defaultWallet\") {\n      defaultWallet = keyValue[1];\n    }\n  });\n  return defaultWallet;\n}\n\nfunction setupModal() {\n  $(\"#passwordModal\").on(\"shown.bs.modal\", function () {\n    $(\"#passwordModal\").trigger(\"focus\");\n  });\n}\n\nfunction setTxType(txType) {\n  actualTxType = txType;\n}\n\nasync function callTx() {\n  const passwordValue = $(\"#walletPassword\").val();\n\n  if (actualTxType === \"deployWebsiteCreator\") {\n    deployWebsiteDeployerSC(nextFileToUpload, address, passwordValue);\n  }\n  if (actualTxType === \"deployWebsiteAndUpload\") {\n    deployWebsiteAndUpload(passwordValue);\n  }\n  if (actualTxType.includes(\"uploadWebsiteCreator\")) {\n    const websiteIndex = actualTxType.split(\"uploadWebsiteCreator\")[1];\n    uploadWebsite(nextFileToUpload, websiteIndex, passwordValue);\n  }\n}\n\n// open file upload\nfunction openDialog() {\n  document.getElementById(\"fileid0\").value = null;\n  document.getElementById(\"fileid0\").click();\n}\n\n// Handle event on file selecting\nfunction handleFileSelect(evt) {\n  let files = evt.target.files; // get files\n  let f = files[0];\n  const reader = new FileReader();\n  reader.onload = (event) => importWallet(JSON.parse(event.target.result)); // desired file content\n  reader.onerror = (error) => reject(error);\n  reader.readAsText(f);\n}\n\nfunction errorAlert(error) {\n  document.getElementsByClassName(\"alert-danger\")[0].style.display = \"block\";\n  document.getElementsByClassName(\"alert-danger\")[0].innerHTML = error;\n  setTimeout(function () {\n    document.getElementsByClassName(\"alert-danger\")[0].style.display = \"none\";\n  }, 5000);\n}\n\nfunction successMessage(message) {\n  document.getElementsByClassName(\"alert-primary\")[0].style.display = \"block\";\n  document.getElementsByClassName(\"alert-primary\")[0].innerHTML = message;\n  setTimeout(function () {\n    document.getElementsByClassName(\"alert-primary\")[0].style.display = \"none\";\n  }, 5000);\n}\n\n// Append wallet accounts in popover component list\nasync function feedWallet(w) {\n  let counter = 0;\n  for (const wallet of w) {\n    $(\"#wallet-list\").append(\n      \"<li class='wallet-item'><a class='wallet-link' id='wallet-link-\" +\n        counter +\n        \"' onclick='changeDefaultWallet(event)' href='#'>\" +\n        wallet.nickname +\n        \"</a></li>\"\n    );\n    counter++;\n  }\n}\n\n// Handle popover click & update default wallet in cookies\nfunction changeDefaultWallet(event) {\n  const idElementClicked = event.target.id;\n  const newDefaultWalletId = idElementClicked.split(\"-\")[2];\n  const walletName = gWallets[newDefaultWalletId].nickname;\n\n  document.cookie = \"defaultWallet=\" + walletName;\n  $(\".popover__title\").html(walletName);\n\n  getWebsiteDeployerSC();\n}\n\nasync function getWallets() {\n  axios\n    .get(\"/mgmt/wallet\")\n    .then((resp) => {\n      if (resp) {\n        gWallets = resp.data;\n        feedWallet(gWallets);\n      }\n    })\n    .catch((e) => {\n      errorAlert(getErrorMessage(e.response.data.code));\n    });\n}\n\nasync function deployWebsiteDeployerSC(password) {\n  let defaultWallet = getDefaultWallet();\n  const dnsNameInputValue = document.getElementById(\"websiteName\").value;\n\n  if (dnsNameInputValue == \"\") {\n    errorAlert(\"Input a DNS name\");\n  } else {\n    document.getElementsByClassName(\"loading\")[0].style.display =\n      \"inline-block\";\n    axios\n      .put(\n        \"/websiteCreator/prepare/\",\n        { url: dnsNameInputValue, nickname: defaultWallet },\n        {\n          headers: {\n            Authorization: password,\n          },\n        }\n      )\n      .then((operation) => {\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n        successMessage(\n          \"Contract deployed to address \" + operation.data.address\n        );\n        getWebsiteDeployerSC();\n      })\n      .catch((e) => {\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n        errorAlert(getErrorMessage(e.response.data.code));\n      });\n  }\n}\n\nfunction tableInsert(resp, count) {\n  const tBody = document\n    .getElementById(\"website-deployers-table\")\n    .getElementsByTagName(\"tbody\")[0];\n  const row = tBody.insertRow(-1);\n  const url = \"http://\" + resp.name + \".massa/\";\n\n  const cell0 = row.insertCell();\n  const cell1 = row.insertCell();\n  const cell2 = row.insertCell();\n  const cell3 = row.insertCell();\n\n  cell0.innerHTML = resp.name;\n  cell1.innerHTML = addressInnerHTML(resp.address);\n  cell2.innerHTML =\n    `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-globe2\" viewBox=\"0 0 16 16\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855-.143.268-.276.56-.395.872.705.157 1.472.257 2.282.287V1.077zM4.249 3.539c.142-.384.304-.744.481-1.078a6.7 6.7 0 0 1 .597-.933A7.01 7.01 0 0 0 3.051 3.05c.362.184.763.349 1.198.49zM3.509 7.5c.036-1.07.188-2.087.436-3.008a9.124 9.124 0 0 1-1.565-.667A6.964 6.964 0 0 0 1.018 7.5h2.49zm1.4-2.741a12.344 12.344 0 0 0-.4 2.741H7.5V5.091c-.91-.03-1.783-.145-2.591-.332zM8.5 5.09V7.5h2.99a12.342 12.342 0 0 0-.399-2.741c-.808.187-1.681.301-2.591.332zM4.51 8.5c.035.987.176 1.914.399 2.741A13.612 13.612 0 0 1 7.5 10.91V8.5H4.51zm3.99 0v2.409c.91.03 1.783.145 2.591.332.223-.827.364-1.754.4-2.741H8.5zm-3.282 3.696c.12.312.252.604.395.872.552 1.035 1.218 1.65 1.887 1.855V11.91c-.81.03-1.577.13-2.282.287zm.11 2.276a6.696 6.696 0 0 1-.598-.933 8.853 8.853 0 0 1-.481-1.079 8.38 8.38 0 0 0-1.198.49 7.01 7.01 0 0 0 2.276 1.522zm-1.383-2.964A13.36 13.36 0 0 1 3.508 8.5h-2.49a6.963 6.963 0 0 0 1.362 3.675c.47-.258.995-.482 1.565-.667zm6.728 2.964a7.009 7.009 0 0 0 2.275-1.521 8.376 8.376 0 0 0-1.197-.49 8.853 8.853 0 0 1-.481 1.078 6.688 6.688 0 0 1-.597.933zM8.5 11.909v3.014c.67-.204 1.335-.82 1.887-1.855.143-.268.276-.56.395-.872A12.63 12.63 0 0 0 8.5 11.91zm3.555-.401c.57.185 1.095.409 1.565.667A6.963 6.963 0 0 0 14.982 8.5h-2.49a13.36 13.36 0 0 1-.437 3.008zM14.982 7.5a6.963 6.963 0 0 0-1.362-3.675c-.47.258-.995.482-1.565.667.248.92.4 1.938.437 3.008h2.49zM11.27 2.461c.177.334.339.694.482 1.078a8.368 8.368 0 0 0 1.196-.49 7.01 7.01 0 0 0-2.275-1.52c.218.283.418.597.597.932zm-.488 1.343a7.765 7.765 0 0 0-.395-.872C9.835 1.897 9.17 1.282 8.5 1.077V4.09c.81-.03 1.577-.13 2.282-.287z\"/></svg></a>`;\n  cell3.innerHTML =\n    \"<div><input id='fileid\" +\n    count +\n    \"' type='file' hidden/><button id='upload-website\" +\n    count +\n    \"' class='primary-button' type='button' value='Upload MB' >Edit</button><img src='./logo.png' style='display: none' class='massa-logo-spinner loading\" +\n    count +\n    \" alt='Massa logo' /></span></div>\";\n\n  document\n    .getElementById(`upload-website${count}`)\n    .addEventListener(\"click\", function () {\n      document.getElementById(`fileid${count}`).value = null;\n      document.getElementById(`fileid${count}`).click();\n    });\n\n  document\n    .getElementById(`fileid${count}`)\n    .addEventListener(\"change\", function (evt) {\n      let files = evt.target.files; // get files\n      nextFileToUpload = files[0];\n\n      setTxType(\"uploadWebsiteCreator\" + count);\n      $(\"#passwordModal\").modal(\"show\");\n    });\n}\n\nfunction uploadWebsite(file, count, password) {\n  let defaultWallet = getDefaultWallet();\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"zipfile\", file);\n  bodyFormData.append(\"address\", deployers[count].address);\n  bodyFormData.append(\"nickname\", defaultWallet);\n  document.getElementsByClassName(\"loading\" + count)[0].style.display =\n    \"inline-block\";\n  axios({\n    url: `/websiteCreator/upload`,\n    method: \"POST\",\n    data: bodyFormData,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: password,\n    },\n  })\n    .then((operation) => {\n      document.getElementsByClassName(\"loading\" + count)[0].style.display =\n        \"none\";\n      successMessage(\"Website uploaded to address : \" + operation.data.address);\n    })\n\n    .catch((e) => {\n      document.getElementsByClassName(\"loading\" + count)[0].style.display =\n        \"none\";\n      errorAlert(getErrorMessage(e.response.data.code));\n    });\n}\n\n$(\"#file-select-button\").click(function () {\n  $(\".upload input\").click();\n});\n\n// change button text with file name\n$(\".upload input\").on(\"change\", function () {\n  let str = $(\".upload input\").val();\n\n  let n = str.lastIndexOf(\"\\\\\");\n\n  let result = str.substring(n + 1);\n\n  $(\"#file-select-button\").html(result);\n});\n\n//check if file is .zip\n$(\".upload input\").on(\"change\", function () {\n  let str = $(\".upload input\").val();\n\n  let n = str.lastIndexOf(\".\");\n\n  let result = str.substring(n + 1);\n\n  if (result != \"zip\" && $(\".upload input\").val() != \"\") {\n    uploadable = false;\n\n    document.getElementsByClassName(\"fileError\")[0].style.display = \"flex\";\n    document.getElementById(\"website-upload\").style.display = \"none\";\n    document.getElementById(\"website-upload-refuse\").style.display = \"flex\";\n  } else {\n    uploadable = true;\n    document.getElementsByClassName(\"fileError\")[0].style.display = \"none\";\n    document.getElementById(\"website-upload\").style.display = \"flex\";\n    document.getElementById(\"website-upload-refuse\").style.display = \"none\";\n  }\n});\n\n//remove label of input website name on focus\n$(\".website-dns input\").on(\"focus\", function () {\n  document.getElementById(\"website-info-display\").style.visibility = \"hidden\";\n});\n\n//check if input string is valid\n$(\".website-dns input\").on(\"change\", function () {\n  let str = $(\".website-dns input\").val();\n  let pattern = new RegExp(\"^[a-z0-9]+$\");\n  let tesPattern = true;\n  testPattern = pattern.test(str);\n\n  if (testPattern == false) {\n    uploadable = false;\n\n    document.getElementsByClassName(\"dns-error\")[0].style.display = \"flex\";\n    document.getElementById(\"website-upload\").style.display = \"none\";\n    document.getElementById(\"website-upload-refuse\").style.display = \"flex\";\n  } else {\n    uploadable = true;\n    document.getElementsByClassName(\"dns-error\")[0].style.display = \"none\";\n    document.getElementById(\"website-upload\").style.display = \"flex\";\n    document.getElementById(\"website-upload-refuse\").style.display = \"none\";\n  }\n});\n\nfunction deployWebsiteAndUpload(password) {\n  if (uploadable == true) {\n    let defaultWallet = getDefaultWallet();\n    const dnsNameInputValue = document.getElementById(\"websiteName\").value;\n\n    const file = document.querySelector(\".upload input\").files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"url\", dnsNameInputValue);\n    bodyFormData.append(\"nickname\", defaultWallet);\n    bodyFormData.append(\"zipfile\", file);\n\n    document.getElementsByClassName(\"loading\")[0].style.display =\n      \"inline-block\";\n    axios({\n      url: `/websiteCreator/prepare`,\n      method: \"put\",\n      data: bodyFormData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: password,\n      },\n    })\n      .then((operation) => {\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n        successMessage(\n          \"Website uploaded to address : \" + operation.data.address\n        );\n        getWebsiteDeployerSC();\n      })\n      .catch((e) => {\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\n        errorAlert(getErrorMessage(e.response.data.code));\n      });\n  } else {\n  }\n}\n"
