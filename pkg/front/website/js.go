// GENERATED BY textFileToGoConst
// GitHub:     github.com/logrusorgru/textFileToGoConst
// input file: html\front\website.js
// generated:  Thu Sep 15 14:31:01 CEST 2022

package website

const JS = "let gWallets = [];\r\nlet deployers = [];\r\nlet actualTxType = \"\";\r\nlet nextFileToUpload;\r\nlet uploadable = false;\r\n\r\n// INIT\r\ngetWallets();\r\ngetWebsiteDeployerSC();\r\ninitializeDefaultWallet();\r\nsetupModal();\r\n\r\n// Write the default wallet text in wallet popover component\r\nasync function getWebsiteDeployerSC() {\r\n  let defaultWallet = getDefaultWallet();\r\n\r\n  $(\"#website-deployers-table tbody tr\").remove();\r\n\r\n  axios\r\n    .get(\"/my/domains/\" + defaultWallet)\r\n    .then((websites) => {\r\n      let count = 0;\r\n      for (const website of websites.data) {\r\n        tableInsert(website, count);\r\n        count++;\r\n      }\r\n      deployers = websites.data;\r\n    })\r\n    .catch((e) => {\r\n      errorAlert(getErrorMessage(e.response.data.code));\r\n    });\r\n}\r\n\r\n// Write the default wallet text in wallet popover component\r\nfunction initializeDefaultWallet() {\r\n  let defaultWallet = getDefaultWallet();\r\n  if (defaultWallet === \"\") {\r\n    defaultWallet = \"Connect\";\r\n  }\r\n  $(\".popover__title\").html(defaultWallet);\r\n}\r\n\r\n// Retrieve the default wallet nickname in cookies\r\nfunction getDefaultWallet() {\r\n  let defaultWallet = \"\";\r\n  const cookies = document.cookie.split(\";\");\r\n  cookies.forEach((cookie) => {\r\n    const keyValue = cookie.split(\"=\");\r\n    if (keyValue[0] === \"defaultWallet\") {\r\n      defaultWallet = keyValue[1];\r\n    }\r\n  });\r\n  return defaultWallet;\r\n}\r\n\r\nfunction setupModal() {\r\n  $(\"#passwordModal\").on(\"shown.bs.modal\", function () {\r\n    $(\"#passwordModal\").trigger(\"focus\");\r\n  });\r\n}\r\n\r\nfunction setTxType(txType) {\r\n  actualTxType = txType;\r\n}\r\n\r\nasync function callTx() {\r\n  const passwordValue = $(\"#walletPassword\").val();\r\n\r\n  if (actualTxType === \"deployWebsiteCreator\") {\r\n    deployWebsiteDeployerSC(nextFileToUpload, address, passwordValue);\r\n  }\r\n  if (actualTxType === \"deployWebsiteAndUpload\") {\r\n    deployWebsiteAndUpload(passwordValue);\r\n  }\r\n  if (actualTxType.includes(\"uploadWebsiteCreator\")) {\r\n    const websiteIndex = actualTxType.split(\"uploadWebsiteCreator\")[1];\r\n    uploadWebsite(nextFileToUpload, websiteIndex, passwordValue);\r\n  }\r\n}\r\n\r\n// open file upload\r\nfunction openDialog() {\r\n  document.getElementById(\"fileid0\").value = null;\r\n  document.getElementById(\"fileid0\").click();\r\n}\r\n\r\n// Handle event on file selecting\r\nfunction handleFileSelect(evt) {\r\n  let files = evt.target.files; // get files\r\n  let f = files[0];\r\n  const reader = new FileReader();\r\n  reader.onload = (event) => importWallet(JSON.parse(event.target.result)); // desired file content\r\n  reader.onerror = (error) => reject(error);\r\n  reader.readAsText(f);\r\n}\r\n\r\nfunction errorAlert(error) {\r\n  document.getElementsByClassName(\"alert-danger\")[0].style.display = \"block\";\r\n  document.getElementsByClassName(\"alert-danger\")[0].innerHTML = error;\r\n  setTimeout(function () {\r\n    document.getElementsByClassName(\"alert-danger\")[0].style.display = \"none\";\r\n  }, 5000);\r\n}\r\n\r\nfunction successMessage(message) {\r\n  document.getElementsByClassName(\"alert-primary\")[0].style.display = \"block\";\r\n  document.getElementsByClassName(\"alert-primary\")[0].innerHTML = message;\r\n  setTimeout(function () {\r\n    document.getElementsByClassName(\"alert-primary\")[0].style.display = \"none\";\r\n  }, 5000);\r\n}\r\n\r\n// Append wallet accounts in popover component list\r\nasync function feedWallet(w) {\r\n  let counter = 0;\r\n  for (const wallet of w) {\r\n    $(\"#wallet-list\").append(\r\n      \"<li class='wallet-item'><a class='wallet-link' id='wallet-link-\" +\r\n        counter +\r\n        \"' onclick='changeDefaultWallet(event)' href='#'>\" +\r\n        wallet.nickname +\r\n        \"</a></li>\"\r\n    );\r\n    counter++;\r\n  }\r\n}\r\n\r\n// Handle popover click & update default wallet in cookies\r\nfunction changeDefaultWallet(event) {\r\n  const idElementClicked = event.target.id;\r\n  const newDefaultWalletId = idElementClicked.split(\"-\")[2];\r\n  const walletName = gWallets[newDefaultWalletId].nickname;\r\n\r\n  document.cookie = \"defaultWallet=\" + walletName;\r\n  $(\".popover__title\").html(walletName);\r\n\r\n  getWebsiteDeployerSC();\r\n}\r\n\r\nasync function getWallets() {\r\n  axios\r\n    .get(\"/mgmt/wallet\")\r\n    .then((resp) => {\r\n      if (resp) {\r\n        gWallets = resp.data;\r\n        feedWallet(gWallets);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      errorAlert(getErrorMessage(e.response.data.code));\r\n    });\r\n}\r\n\r\nasync function deployWebsiteDeployerSC(password) {\r\n  let defaultWallet = getDefaultWallet();\r\n  const dnsNameInputValue = document.getElementById(\"websiteName\").value;\r\n\r\n  if (dnsNameInputValue == \"\") {\r\n    errorAlert(\"Input a DNS name\");\r\n  } else {\r\n    document.getElementsByClassName(\"loading\")[0].style.display =\r\n      \"inline-block\";\r\n    axios\r\n      .put(\r\n        \"/websiteCreator/prepare/\",\r\n        { url: dnsNameInputValue, nickname: defaultWallet },\r\n        {\r\n          headers: {\r\n            Authorization: password,\r\n          },\r\n        }\r\n      )\r\n      .then((operation) => {\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n        successMessage(\r\n          \"Contract deployed to address \" + operation.data.address\r\n        );\r\n        getWebsiteDeployerSC();\r\n      })\r\n      .catch((e) => {\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n        errorAlert(getErrorMessage(e.response.data.code));\r\n      });\r\n  }\r\n}\r\n\r\nfunction tableInsert(resp, count) {\r\n  const tBody = document\r\n    .getElementById(\"website-deployers-table\")\r\n    .getElementsByTagName(\"tbody\")[0];\r\n  const row = tBody.insertRow(-1);\r\n  const url = \"http://\" + resp.name + \".massa/\";\r\n\r\n  const cell0 = row.insertCell();\r\n  const cell1 = row.insertCell();\r\n  const cell2 = row.insertCell();\r\n  const cell3 = row.insertCell();\r\n\r\n  cell0.innerHTML = resp.name;\r\n  cell1.innerHTML = resp.address;\r\n  cell2.innerHTML =\r\n    \"<a href='\" +\r\n    url +\r\n    \"'target = '_blank' rel='noopener noreferrer'>\" +\r\n    url +\r\n    \"</a>\";\r\n  cell3.innerHTML =\r\n    \"<div><input id='fileid\" +\r\n    count +\r\n    \"' type='file' hidden/><button id='upload-website\" +\r\n    count +\r\n    \"' class='primary-button' id='buttonid' type='button' value='Upload MB' >Edit</button><img src='./logo.png' style='display: none' class='massa-logo-spinner loading\" +\r\n    count +\r\n    \" alt='Massa logo' /></span></div>\";\r\n\r\n  document\r\n    .getElementById(`upload-website${count}`)\r\n    .addEventListener(\"click\", function () {\r\n      document.getElementById(`fileid${count}`).value = null;\r\n      document.getElementById(`fileid${count}`).click();\r\n    });\r\n\r\n  document\r\n    .getElementById(`fileid${count}`)\r\n    .addEventListener(\"change\", function (evt) {\r\n      let files = evt.target.files; // get files\r\n      nextFileToUpload = files[0];\r\n\r\n      setTxType(\"uploadWebsiteCreator\" + count);\r\n      $(\"#passwordModal\").modal(\"show\");\r\n    });\r\n}\r\n\r\nfunction uploadWebsite(file, count, password) {\r\n  let defaultWallet = getDefaultWallet();\r\n  const bodyFormData = new FormData();\r\n  bodyFormData.append(\"zipfile\", file);\r\n  bodyFormData.append(\"address\", deployers[count].address);\r\n  bodyFormData.append(\"nickname\", defaultWallet);\r\n  document.getElementsByClassName(\"loading\" + count)[0].style.display =\r\n    \"inline-block\";\r\n  axios({\r\n    url: `/websiteCreator/upload`,\r\n    method: \"POST\",\r\n    data: bodyFormData,\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: password,\r\n    },\r\n  })\r\n    .then((operation) => {\r\n      document.getElementsByClassName(\"loading\" + count)[0].style.display =\r\n        \"none\";\r\n      successMessage(\"Website uploaded to address : \" + operation.data.address);\r\n    })\r\n\r\n    .catch((e) => {\r\n      document.getElementsByClassName(\"loading\" + count)[0].style.display =\r\n        \"none\";\r\n      errorAlert(getErrorMessage(e.response.data.code));\r\n    });\r\n}\r\n\r\n$(\"#file-select-button\").click(function () {\r\n  $(\".upload input\").click();\r\n});\r\n\r\n// change button text with file name\r\n$(\".upload input\").on(\"change\", function () {\r\n  let str = $(\".upload input\").val();\r\n\r\n  let n = str.lastIndexOf(\"\\\\\");\r\n\r\n  let result = str.substring(n + 1);\r\n\r\n  $(\"#file-select-button\").html(result);\r\n});\r\n\r\n//check if file is .zip\r\n$(\".upload input\").on(\"change\", function () {\r\n  let str = $(\".upload input\").val();\r\n\r\n  let n = str.lastIndexOf(\".\");\r\n\r\n  let result = str.substring(n + 1);\r\n\r\n  if (result != \"zip\" && $(\".upload input\").val() != \"\") {\r\n    uploadable = false;\r\n\r\n    document.getElementsByClassName(\"fileError\")[0].style.display = \"flex\";\r\n    document.getElementById(\"website-upload\").style.display = \"none\";\r\n    document.getElementById(\"website-upload-refuse\").style.display = \"flex\";\r\n  } else {\r\n    uploadable = true;\r\n    document.getElementsByClassName(\"fileError\")[0].style.display = \"none\";\r\n    document.getElementById(\"website-upload\").style.display = \"flex\";\r\n    document.getElementById(\"website-upload-refuse\").style.display = \"none\";\r\n  }\r\n});\r\n\r\n//remove label of input website name on focus\r\n$(\".website-dns input\").on(\"focus\", function () {\r\n  document.getElementById(\"website-info-display\").style.visibility = \"hidden\";\r\n});\r\n\r\n//check if input string is valid\r\n$(\".website-dns input\").on(\"change\", function () {\r\n  let str = $(\".website-dns input\").val();\r\n  let pattern = new RegExp(\"^[a-z0-9]+$\");\r\n  let tesPattern = true;\r\n  testPattern = pattern.test(str);\r\n\r\n  if (testPattern == false) {\r\n    uploadable = false;\r\n\r\n    document.getElementsByClassName(\"dns-error\")[0].style.display = \"flex\";\r\n    document.getElementById(\"website-upload\").style.display = \"none\";\r\n    document.getElementById(\"website-upload-refuse\").style.display = \"flex\";\r\n  } else {\r\n    uploadable = true;\r\n    document.getElementsByClassName(\"dns-error\")[0].style.display = \"none\";\r\n    document.getElementById(\"website-upload\").style.display = \"flex\";\r\n    document.getElementById(\"website-upload-refuse\").style.display = \"none\";\r\n  }\r\n});\r\n\r\nfunction deployWebsiteAndUpload(password) {\r\n  if (uploadable == true) {\r\n    let defaultWallet = getDefaultWallet();\r\n    const dnsNameInputValue = document.getElementById(\"websiteName\").value;\r\n\r\n    const file = document.querySelector(\".upload input\").files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append(\"url\", dnsNameInputValue);\r\n    bodyFormData.append(\"nickname\", defaultWallet);\r\n    bodyFormData.append(\"zipfile\", file);\r\n\r\n    document.getElementsByClassName(\"loading\")[0].style.display =\r\n      \"inline-block\";\r\n    axios({\r\n      url: `/websiteCreator/prepare`,\r\n      method: \"put\",\r\n      data: bodyFormData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: password,\r\n      },\r\n    })\r\n      .then((operation) => {\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n        successMessage(\r\n          \"Website uploaded to address : \" + operation.data.address\r\n        );\r\n        getWebsiteDeployerSC();\r\n      })\r\n      .catch((e) => {\r\n        document.getElementsByClassName(\"loading\")[0].style.display = \"none\";\r\n        errorAlert(getErrorMessage(e.response.data.code));\r\n      });\r\n  } else {\r\n  }\r\n}\r\n"
