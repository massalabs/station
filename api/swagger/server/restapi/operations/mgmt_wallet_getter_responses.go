// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// MgmtWalletGetterOKCode is the HTTP code returned for type MgmtWalletGetterOK
const MgmtWalletGetterOKCode int = 200

/*MgmtWalletGetterOK Wallet retrieved.

swagger:response mgmtWalletGetterOK
*/
type MgmtWalletGetterOK struct {

	/*
	  In: Body
	*/
	Payload *models.Wallet `json:"body,omitempty"`
}

// NewMgmtWalletGetterOK creates MgmtWalletGetterOK with default headers values
func NewMgmtWalletGetterOK() *MgmtWalletGetterOK {

	return &MgmtWalletGetterOK{}
}

// WithPayload adds the payload to the mgmt wallet getter o k response
func (o *MgmtWalletGetterOK) WithPayload(payload *models.Wallet) *MgmtWalletGetterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet getter o k response
func (o *MgmtWalletGetterOK) SetPayload(payload *models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletGetterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletGetterBadRequestCode is the HTTP code returned for type MgmtWalletGetterBadRequest
const MgmtWalletGetterBadRequestCode int = 400

/*MgmtWalletGetterBadRequest Bad request.

swagger:response mgmtWalletGetterBadRequest
*/
type MgmtWalletGetterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletGetterBadRequest creates MgmtWalletGetterBadRequest with default headers values
func NewMgmtWalletGetterBadRequest() *MgmtWalletGetterBadRequest {

	return &MgmtWalletGetterBadRequest{}
}

// WithPayload adds the payload to the mgmt wallet getter bad request response
func (o *MgmtWalletGetterBadRequest) WithPayload(payload *models.Error) *MgmtWalletGetterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet getter bad request response
func (o *MgmtWalletGetterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletGetterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletGetterNotFoundCode is the HTTP code returned for type MgmtWalletGetterNotFound
const MgmtWalletGetterNotFoundCode int = 404

/*MgmtWalletGetterNotFound Bad request.

swagger:response mgmtWalletGetterNotFound
*/
type MgmtWalletGetterNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletGetterNotFound creates MgmtWalletGetterNotFound with default headers values
func NewMgmtWalletGetterNotFound() *MgmtWalletGetterNotFound {

	return &MgmtWalletGetterNotFound{}
}

// WithPayload adds the payload to the mgmt wallet getter not found response
func (o *MgmtWalletGetterNotFound) WithPayload(payload *models.Error) *MgmtWalletGetterNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet getter not found response
func (o *MgmtWalletGetterNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletGetterNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletGetterUnprocessableEntityCode is the HTTP code returned for type MgmtWalletGetterUnprocessableEntity
const MgmtWalletGetterUnprocessableEntityCode int = 422

/*MgmtWalletGetterUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response mgmtWalletGetterUnprocessableEntity
*/
type MgmtWalletGetterUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletGetterUnprocessableEntity creates MgmtWalletGetterUnprocessableEntity with default headers values
func NewMgmtWalletGetterUnprocessableEntity() *MgmtWalletGetterUnprocessableEntity {

	return &MgmtWalletGetterUnprocessableEntity{}
}

// WithPayload adds the payload to the mgmt wallet getter unprocessable entity response
func (o *MgmtWalletGetterUnprocessableEntity) WithPayload(payload *models.Error) *MgmtWalletGetterUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet getter unprocessable entity response
func (o *MgmtWalletGetterUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletGetterUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletGetterInternalServerErrorCode is the HTTP code returned for type MgmtWalletGetterInternalServerError
const MgmtWalletGetterInternalServerErrorCode int = 500

/*MgmtWalletGetterInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response mgmtWalletGetterInternalServerError
*/
type MgmtWalletGetterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletGetterInternalServerError creates MgmtWalletGetterInternalServerError with default headers values
func NewMgmtWalletGetterInternalServerError() *MgmtWalletGetterInternalServerError {

	return &MgmtWalletGetterInternalServerError{}
}

// WithPayload adds the payload to the mgmt wallet getter internal server error response
func (o *MgmtWalletGetterInternalServerError) WithPayload(payload *models.Error) *MgmtWalletGetterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet getter internal server error response
func (o *MgmtWalletGetterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletGetterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
