// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MassaGetAddressesHandlerFunc turns a function with the right signature into a massa get addresses handler
type MassaGetAddressesHandlerFunc func(MassaGetAddressesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MassaGetAddressesHandlerFunc) Handle(params MassaGetAddressesParams) middleware.Responder {
	return fn(params)
}

// MassaGetAddressesHandler interface for that can handle valid massa get addresses params
type MassaGetAddressesHandler interface {
	Handle(MassaGetAddressesParams) middleware.Responder
}

// NewMassaGetAddresses creates a new http.Handler for the massa get addresses operation
func NewMassaGetAddresses(ctx *middleware.Context, handler MassaGetAddressesHandler) *MassaGetAddresses {
	return &MassaGetAddresses{Context: ctx, Handler: handler}
}

/*
	MassaGetAddresses swagger:route GET /massa/addresses massaGetAddresses

MassaGetAddresses massa get addresses API
*/
type MassaGetAddresses struct {
	Context *middleware.Context
	Handler MassaGetAddressesHandler
}

func (o *MassaGetAddresses) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewMassaGetAddressesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// MassaGetAddressesOKBody massa get addresses o k body
//
// swagger:model MassaGetAddressesOKBody
type MassaGetAddressesOKBody struct {

	// addresses attributes
	AddressesAttributes map[string]MassaGetAddressesOKBodyAddressesAttributesAnon `json:"addressesAttributes,omitempty"`
}

// Validate validates this massa get addresses o k body
func (o *MassaGetAddressesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddressesAttributes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MassaGetAddressesOKBody) validateAddressesAttributes(formats strfmt.Registry) error {
	if swag.IsZero(o.AddressesAttributes) { // not required
		return nil
	}

	for k := range o.AddressesAttributes {

		if swag.IsZero(o.AddressesAttributes[k]) { // not required
			continue
		}
		if val, ok := o.AddressesAttributes[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("massaGetAddressesOK" + "." + "addressesAttributes" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("massaGetAddressesOK" + "." + "addressesAttributes" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this massa get addresses o k body based on the context it is used
func (o *MassaGetAddressesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAddressesAttributes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MassaGetAddressesOKBody) contextValidateAddressesAttributes(ctx context.Context, formats strfmt.Registry) error {

	for k := range o.AddressesAttributes {

		if val, ok := o.AddressesAttributes[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *MassaGetAddressesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MassaGetAddressesOKBody) UnmarshalBinary(b []byte) error {
	var res MassaGetAddressesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// MassaGetAddressesOKBodyAddressesAttributesAnon address key
//
// swagger:model MassaGetAddressesOKBodyAddressesAttributesAnon
type MassaGetAddressesOKBodyAddressesAttributesAnon struct {

	// balance
	Balance *MassaGetAddressesOKBodyAddressesAttributesAnonBalance `json:"balance,omitempty"`
}

// Validate validates this massa get addresses o k body addresses attributes anon
func (o *MassaGetAddressesOKBodyAddressesAttributesAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBalance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MassaGetAddressesOKBodyAddressesAttributesAnon) validateBalance(formats strfmt.Registry) error {
	if swag.IsZero(o.Balance) { // not required
		return nil
	}

	if o.Balance != nil {
		if err := o.Balance.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("balance")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("balance")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this massa get addresses o k body addresses attributes anon based on the context it is used
func (o *MassaGetAddressesOKBodyAddressesAttributesAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBalance(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *MassaGetAddressesOKBodyAddressesAttributesAnon) contextValidateBalance(ctx context.Context, formats strfmt.Registry) error {

	if o.Balance != nil {
		if err := o.Balance.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("balance")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("balance")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *MassaGetAddressesOKBodyAddressesAttributesAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MassaGetAddressesOKBodyAddressesAttributesAnon) UnmarshalBinary(b []byte) error {
	var res MassaGetAddressesOKBodyAddressesAttributesAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// MassaGetAddressesOKBodyAddressesAttributesAnonBalance massa get addresses o k body addresses attributes anon balance
//
// swagger:model MassaGetAddressesOKBodyAddressesAttributesAnonBalance
type MassaGetAddressesOKBodyAddressesAttributesAnonBalance struct {

	// final
	Final string `json:"final,omitempty"`

	// pending
	Pending string `json:"pending,omitempty"`
}

// Validate validates this massa get addresses o k body addresses attributes anon balance
func (o *MassaGetAddressesOKBodyAddressesAttributesAnonBalance) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this massa get addresses o k body addresses attributes anon balance based on context it is used
func (o *MassaGetAddressesOKBodyAddressesAttributesAnonBalance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MassaGetAddressesOKBodyAddressesAttributesAnonBalance) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MassaGetAddressesOKBodyAddressesAttributesAnonBalance) UnmarshalBinary(b []byte) error {
	var res MassaGetAddressesOKBodyAddressesAttributesAnonBalance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
