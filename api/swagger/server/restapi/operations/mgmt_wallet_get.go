// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// MgmtWalletGetHandlerFunc turns a function with the right signature into a mgmt wallet get handler
type MgmtWalletGetHandlerFunc func(MgmtWalletGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MgmtWalletGetHandlerFunc) Handle(params MgmtWalletGetParams) middleware.Responder {
	return fn(params)
}

// MgmtWalletGetHandler interface for that can handle valid mgmt wallet get params
type MgmtWalletGetHandler interface {
	Handle(MgmtWalletGetParams) middleware.Responder
}

// NewMgmtWalletGet creates a new http.Handler for the mgmt wallet get operation
func NewMgmtWalletGet(ctx *middleware.Context, handler MgmtWalletGetHandler) *MgmtWalletGet {
	return &MgmtWalletGet{Context: ctx, Handler: handler}
}

/*
	MgmtWalletGet swagger:route GET /mgmt/wallet mgmtWalletGet

MgmtWalletGet mgmt wallet get API
*/
type MgmtWalletGet struct {
	Context *middleware.Context
	Handler MgmtWalletGetHandler
}

func (o *MgmtWalletGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewMgmtWalletGetParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
