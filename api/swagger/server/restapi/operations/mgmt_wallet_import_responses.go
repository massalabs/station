// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// MgmtWalletImportOKCode is the HTTP code returned for type MgmtWalletImportOK
const MgmtWalletImportOKCode int = 200

/*
MgmtWalletImportOK New wallet created.

swagger:response mgmtWalletImportOK
*/
type MgmtWalletImportOK struct {

	/*
	  In: Body
	*/
	Payload *models.Wallet `json:"body,omitempty"`
}

// NewMgmtWalletImportOK creates MgmtWalletImportOK with default headers values
func NewMgmtWalletImportOK() *MgmtWalletImportOK {

	return &MgmtWalletImportOK{}
}

// WithPayload adds the payload to the mgmt wallet import o k response
func (o *MgmtWalletImportOK) WithPayload(payload *models.Wallet) *MgmtWalletImportOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet import o k response
func (o *MgmtWalletImportOK) SetPayload(payload *models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletImportOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletImportBadRequestCode is the HTTP code returned for type MgmtWalletImportBadRequest
const MgmtWalletImportBadRequestCode int = 400

/*
MgmtWalletImportBadRequest Bad request.

swagger:response mgmtWalletImportBadRequest
*/
type MgmtWalletImportBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletImportBadRequest creates MgmtWalletImportBadRequest with default headers values
func NewMgmtWalletImportBadRequest() *MgmtWalletImportBadRequest {

	return &MgmtWalletImportBadRequest{}
}

// WithPayload adds the payload to the mgmt wallet import bad request response
func (o *MgmtWalletImportBadRequest) WithPayload(payload *models.Error) *MgmtWalletImportBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet import bad request response
func (o *MgmtWalletImportBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletImportBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletImportUnprocessableEntityCode is the HTTP code returned for type MgmtWalletImportUnprocessableEntity
const MgmtWalletImportUnprocessableEntityCode int = 422

/*
MgmtWalletImportUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response mgmtWalletImportUnprocessableEntity
*/
type MgmtWalletImportUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletImportUnprocessableEntity creates MgmtWalletImportUnprocessableEntity with default headers values
func NewMgmtWalletImportUnprocessableEntity() *MgmtWalletImportUnprocessableEntity {

	return &MgmtWalletImportUnprocessableEntity{}
}

// WithPayload adds the payload to the mgmt wallet import unprocessable entity response
func (o *MgmtWalletImportUnprocessableEntity) WithPayload(payload *models.Error) *MgmtWalletImportUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet import unprocessable entity response
func (o *MgmtWalletImportUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletImportUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletImportInternalServerErrorCode is the HTTP code returned for type MgmtWalletImportInternalServerError
const MgmtWalletImportInternalServerErrorCode int = 500

/*
MgmtWalletImportInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response mgmtWalletImportInternalServerError
*/
type MgmtWalletImportInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletImportInternalServerError creates MgmtWalletImportInternalServerError with default headers values
func NewMgmtWalletImportInternalServerError() *MgmtWalletImportInternalServerError {

	return &MgmtWalletImportInternalServerError{}
}

// WithPayload adds the payload to the mgmt wallet import internal server error response
func (o *MgmtWalletImportInternalServerError) WithPayload(payload *models.Error) *MgmtWalletImportInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet import internal server error response
func (o *MgmtWalletImportInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletImportInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
