// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// CmdExecuteFunctionOKCode is the HTTP code returned for type CmdExecuteFunctionOK
const CmdExecuteFunctionOKCode int = 200

/*CmdExecuteFunctionOK OK.

swagger:response cmdExecuteFunctionOK
*/
type CmdExecuteFunctionOK struct {

	/*Operation id.
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCmdExecuteFunctionOK creates CmdExecuteFunctionOK with default headers values
func NewCmdExecuteFunctionOK() *CmdExecuteFunctionOK {

	return &CmdExecuteFunctionOK{}
}

// WithPayload adds the payload to the cmd execute function o k response
func (o *CmdExecuteFunctionOK) WithPayload(payload string) *CmdExecuteFunctionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cmd execute function o k response
func (o *CmdExecuteFunctionOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CmdExecuteFunctionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CmdExecuteFunctionUnprocessableEntityCode is the HTTP code returned for type CmdExecuteFunctionUnprocessableEntity
const CmdExecuteFunctionUnprocessableEntityCode int = 422

/*CmdExecuteFunctionUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response cmdExecuteFunctionUnprocessableEntity
*/
type CmdExecuteFunctionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCmdExecuteFunctionUnprocessableEntity creates CmdExecuteFunctionUnprocessableEntity with default headers values
func NewCmdExecuteFunctionUnprocessableEntity() *CmdExecuteFunctionUnprocessableEntity {

	return &CmdExecuteFunctionUnprocessableEntity{}
}

// WithPayload adds the payload to the cmd execute function unprocessable entity response
func (o *CmdExecuteFunctionUnprocessableEntity) WithPayload(payload *models.Error) *CmdExecuteFunctionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cmd execute function unprocessable entity response
func (o *CmdExecuteFunctionUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CmdExecuteFunctionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CmdExecuteFunctionInternalServerErrorCode is the HTTP code returned for type CmdExecuteFunctionInternalServerError
const CmdExecuteFunctionInternalServerErrorCode int = 500

/*CmdExecuteFunctionInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response cmdExecuteFunctionInternalServerError
*/
type CmdExecuteFunctionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCmdExecuteFunctionInternalServerError creates CmdExecuteFunctionInternalServerError with default headers values
func NewCmdExecuteFunctionInternalServerError() *CmdExecuteFunctionInternalServerError {

	return &CmdExecuteFunctionInternalServerError{}
}

// WithPayload adds the payload to the cmd execute function internal server error response
func (o *CmdExecuteFunctionInternalServerError) WithPayload(payload *models.Error) *CmdExecuteFunctionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cmd execute function internal server error response
func (o *CmdExecuteFunctionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CmdExecuteFunctionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
