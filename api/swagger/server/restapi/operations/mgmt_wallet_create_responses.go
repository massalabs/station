// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// MgmtWalletCreateOKCode is the HTTP code returned for type MgmtWalletCreateOK
const MgmtWalletCreateOKCode int = 200

/*MgmtWalletCreateOK New wallet created.

swagger:response mgmtWalletCreateOK
*/
type MgmtWalletCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Wallet `json:"body,omitempty"`
}

// NewMgmtWalletCreateOK creates MgmtWalletCreateOK with default headers values
func NewMgmtWalletCreateOK() *MgmtWalletCreateOK {

	return &MgmtWalletCreateOK{}
}

// WithPayload adds the payload to the mgmt wallet create o k response
func (o *MgmtWalletCreateOK) WithPayload(payload *models.Wallet) *MgmtWalletCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet create o k response
func (o *MgmtWalletCreateOK) SetPayload(payload *models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletCreateBadRequestCode is the HTTP code returned for type MgmtWalletCreateBadRequest
const MgmtWalletCreateBadRequestCode int = 400

/*MgmtWalletCreateBadRequest Bad request.

swagger:response mgmtWalletCreateBadRequest
*/
type MgmtWalletCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletCreateBadRequest creates MgmtWalletCreateBadRequest with default headers values
func NewMgmtWalletCreateBadRequest() *MgmtWalletCreateBadRequest {

	return &MgmtWalletCreateBadRequest{}
}

// WithPayload adds the payload to the mgmt wallet create bad request response
func (o *MgmtWalletCreateBadRequest) WithPayload(payload *models.Error) *MgmtWalletCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet create bad request response
func (o *MgmtWalletCreateBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletCreateUnprocessableEntityCode is the HTTP code returned for type MgmtWalletCreateUnprocessableEntity
const MgmtWalletCreateUnprocessableEntityCode int = 422

/*MgmtWalletCreateUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response mgmtWalletCreateUnprocessableEntity
*/
type MgmtWalletCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletCreateUnprocessableEntity creates MgmtWalletCreateUnprocessableEntity with default headers values
func NewMgmtWalletCreateUnprocessableEntity() *MgmtWalletCreateUnprocessableEntity {

	return &MgmtWalletCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the mgmt wallet create unprocessable entity response
func (o *MgmtWalletCreateUnprocessableEntity) WithPayload(payload *models.Error) *MgmtWalletCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet create unprocessable entity response
func (o *MgmtWalletCreateUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MgmtWalletCreateInternalServerErrorCode is the HTTP code returned for type MgmtWalletCreateInternalServerError
const MgmtWalletCreateInternalServerErrorCode int = 500

/*MgmtWalletCreateInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response mgmtWalletCreateInternalServerError
*/
type MgmtWalletCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMgmtWalletCreateInternalServerError creates MgmtWalletCreateInternalServerError with default headers values
func NewMgmtWalletCreateInternalServerError() *MgmtWalletCreateInternalServerError {

	return &MgmtWalletCreateInternalServerError{}
}

// WithPayload adds the payload to the mgmt wallet create internal server error response
func (o *MgmtWalletCreateInternalServerError) WithPayload(payload *models.Error) *MgmtWalletCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mgmt wallet create internal server error response
func (o *MgmtWalletCreateInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MgmtWalletCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
