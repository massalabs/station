// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// MgmtWalletBalanceHandlerFunc turns a function with the right signature into a mgmt wallet balance handler
type MgmtWalletBalanceHandlerFunc func(MgmtWalletBalanceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MgmtWalletBalanceHandlerFunc) Handle(params MgmtWalletBalanceParams) middleware.Responder {
	return fn(params)
}

// MgmtWalletBalanceHandler interface for that can handle valid mgmt wallet balance params
type MgmtWalletBalanceHandler interface {
	Handle(MgmtWalletBalanceParams) middleware.Responder
}

// NewMgmtWalletBalance creates a new http.Handler for the mgmt wallet balance operation
func NewMgmtWalletBalance(ctx *middleware.Context, handler MgmtWalletBalanceHandler) *MgmtWalletBalance {
	return &MgmtWalletBalance{Context: ctx, Handler: handler}
}

/*
	MgmtWalletBalance swagger:route GET /mgmt/balance/{address} mgmtWalletBalance

MgmtWalletBalance mgmt wallet balance API
*/
type MgmtWalletBalance struct {
	Context *middleware.Context
	Handler MgmtWalletBalanceHandler
}

func (o *MgmtWalletBalance) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewMgmtWalletBalanceParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
