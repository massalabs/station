// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra/api/swagger/server/models"
)

// PluginManagerListOKCode is the HTTP code returned for type PluginManagerListOK
const PluginManagerListOKCode int = 200

/*
PluginManagerListOK List all installed plugins.

swagger:response pluginManagerListOK
*/
type PluginManagerListOK struct {

	/*
	  In: Body
	*/
	Payload []*PluginManagerListOKBodyItems0 `json:"body,omitempty"`
}

// NewPluginManagerListOK creates PluginManagerListOK with default headers values
func NewPluginManagerListOK() *PluginManagerListOK {

	return &PluginManagerListOK{}
}

// WithPayload adds the payload to the plugin manager list o k response
func (o *PluginManagerListOK) WithPayload(payload []*PluginManagerListOKBodyItems0) *PluginManagerListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the plugin manager list o k response
func (o *PluginManagerListOK) SetPayload(payload []*PluginManagerListOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PluginManagerListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*PluginManagerListOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PluginManagerListBadRequestCode is the HTTP code returned for type PluginManagerListBadRequest
const PluginManagerListBadRequestCode int = 400

/*
PluginManagerListBadRequest Bad request.

swagger:response pluginManagerListBadRequest
*/
type PluginManagerListBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPluginManagerListBadRequest creates PluginManagerListBadRequest with default headers values
func NewPluginManagerListBadRequest() *PluginManagerListBadRequest {

	return &PluginManagerListBadRequest{}
}

// WithPayload adds the payload to the plugin manager list bad request response
func (o *PluginManagerListBadRequest) WithPayload(payload *models.Error) *PluginManagerListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the plugin manager list bad request response
func (o *PluginManagerListBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PluginManagerListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PluginManagerListNotFoundCode is the HTTP code returned for type PluginManagerListNotFound
const PluginManagerListNotFoundCode int = 404

/*
PluginManagerListNotFound Not found.

swagger:response pluginManagerListNotFound
*/
type PluginManagerListNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPluginManagerListNotFound creates PluginManagerListNotFound with default headers values
func NewPluginManagerListNotFound() *PluginManagerListNotFound {

	return &PluginManagerListNotFound{}
}

// WithPayload adds the payload to the plugin manager list not found response
func (o *PluginManagerListNotFound) WithPayload(payload *models.Error) *PluginManagerListNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the plugin manager list not found response
func (o *PluginManagerListNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PluginManagerListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PluginManagerListUnprocessableEntityCode is the HTTP code returned for type PluginManagerListUnprocessableEntity
const PluginManagerListUnprocessableEntityCode int = 422

/*
PluginManagerListUnprocessableEntity Unprocessable Entity - The syntax is correct, but the server was unable to process the contained instructions.

swagger:response pluginManagerListUnprocessableEntity
*/
type PluginManagerListUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPluginManagerListUnprocessableEntity creates PluginManagerListUnprocessableEntity with default headers values
func NewPluginManagerListUnprocessableEntity() *PluginManagerListUnprocessableEntity {

	return &PluginManagerListUnprocessableEntity{}
}

// WithPayload adds the payload to the plugin manager list unprocessable entity response
func (o *PluginManagerListUnprocessableEntity) WithPayload(payload *models.Error) *PluginManagerListUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the plugin manager list unprocessable entity response
func (o *PluginManagerListUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PluginManagerListUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PluginManagerListInternalServerErrorCode is the HTTP code returned for type PluginManagerListInternalServerError
const PluginManagerListInternalServerErrorCode int = 500

/*
PluginManagerListInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response pluginManagerListInternalServerError
*/
type PluginManagerListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPluginManagerListInternalServerError creates PluginManagerListInternalServerError with default headers values
func NewPluginManagerListInternalServerError() *PluginManagerListInternalServerError {

	return &PluginManagerListInternalServerError{}
}

// WithPayload adds the payload to the plugin manager list internal server error response
func (o *PluginManagerListInternalServerError) WithPayload(payload *models.Error) *PluginManagerListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the plugin manager list internal server error response
func (o *PluginManagerListInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PluginManagerListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
