consumes:
- application/json
info:
  description: Thyra HTTP server API.
  title: thyra-server
  version: 0.0.0
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
paths:
  /mgmt/wallet:
    post:
      operationId: mgmtWalletCreate
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          required:
            - nickname
            - password
          properties:
            nickname:
              description: Wallet's short name.
              type: string
            password:
              description: Private key password.
              type: string
      produces:
      - application/json
      responses:
        '200':
          description: New wallet created.
          schema:
            $ref: '#/definitions/Wallet'
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error - The server has encountered a situation it does not know how to handle.
          schema:
            $ref: '#/definitions/Error'
    put:
      operationId: mgmtWalletImport
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Wallet'
      produces:
      - application/json
      responses:
        '204':
          description: Wallet imported.
        '400':
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error - The server has encountered a situation it does not know how to handle.
          schema:
            $ref: '#/definitions/Error'
  /cmd/executeFunction:
    post:
      operationId: cmdExecuteFunction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - name
              - at
            default:
              name: "test"
              at: "A1MrqLgWq5XXDpTBH6fzXHUg7E8M5U2fYDAF3E1xnUSzyZuKpMh"
              args: ""
              gaz:
                price: 0
                limit: 700000000
              coins:
                parallel: 0
                sequential: 0
              expiry: 3
              fee: 0
              keyId: default
            properties:
              name:
                description: Function name to call.
                type: string
              at:
                description: Smart contract address exporting the function to call.
                type: string
              args:
                description: Arguments to pass to the function.
                type: string
                default: ""
              gaz:
                type: object
                description: Gaz attibutes. Gaz is a virtual resource consumed by node while running smart contract.
                properties:
                  price:
                    type: number
                    description: Price of a gaz unit.
                    default: 0
                  limit:
                    type: integer
                    description: Maximum number of gaz unit that a node will be able consume.
                    default: 700000000
              coins:
                type: object
                description: Coins to be send from caller to smart contract address.
                properties:
                  parallel:
                    description: Number of parallel coins to transfer from the caller to the smart contract address.
                    type: number
                    default: 0
                  sequential:
                    description: Number of sequential coins to transfer from the caller to the smart contract address.
                    type: number
                    default: 0
              expiry:
                description: Set the expiry duration (in number of slots) of the transaction.
                type: integer
                default: 3
              fee:
                description: Set the fee amount (in massa) that will be given to the block creator.
                type: number
                default: 0
              keyId:
                description: Defines the key to used to sign the transaction.
                type: string
                default: default
      produces:
      - application/json
      responses:
        '200':
          description: OK.
          schema:
            type: string
            description: Operation id.
        '422':
          description: Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error - The server has encountered a situation it does not know how to handle.
          schema:
            $ref: '#/definitions/Error'
  /kpi:
    get:
      operationId: kpi
      parameters:
        - name: scope
          in: query
          type: array
          minItems: 0
          uniqueItems: true
          collectionFormat: csv
          items:
            type: string
            enum: [wallet, node, stacking, blockchain]
      produces:
      - application/json
      responses:
        '200':
          description: kpi message.
          schema:
            type: object
            properties:
              wallet:
                type: array
                items:
                  type: object
                  properties:
                    coin:
                      type: string
                    balance:
                      type: number
              node:
                type: array
                items:
                  type: object
                  properties:
                    memory:
                      type: array
                      items:
                        type: number
                    cpu:
                      type: array
                      items:
                        type: number
                    storage:
                      type: array
                      items:
                        type: number
                    network:
                      type: array
                      items:
                        type: number
              stacking:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    rolls:
                      type: integer
                    slashing:
                      type: integer
                    gains:
                      type: number
definitions:
  Error:
    type: object
    description: Error object.
    required:
      - code
      - message
    properties:
      code:
        description: error code.
        type: string
      message:
        description: error message.
        type: string
  Wallet:
    type: object
    description: Wallet object (V0).
    required:
      - nickname
      - address
      - keyPairs
    properties:
      nickname:
        description: wallet's nickname.
        type: string
      address:
        description: wallet's address.
        type: string
      keyPairs:
        description: wallet's key pairs.
        type: array
        items:
          type: object
          required:
            - privateKey
            - publicKey
            - salt
            - nonce
          properties:
            privateKey: 
              description: Key pair's private key.
              type: string
              format: base58check
            publicKey: 
              description: Key pair's public key.
              type: string
              format: base58check
            salt: 
              description: Salt used by the PBKDF that generates the secret key used to protect the key pair's private key.
              type: string
              format: base58check
            nonce: 
              description: Nonce used by the AES-GCM algorithm used to protect the key pair's private key.
              type: string
              format: base58check