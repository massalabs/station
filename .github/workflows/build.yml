name: build and upload artifacts
on:
  push:
    tags:
      - v[0-9]+.*
    branches:
      - main
  pull_request:
  workflow_call:
    inputs:
      tag_name:
        type: string
      draft:
        type: string
      prerelease:
        type: string
      generate_release_notes:
        type: string

permissions:
  contents: write

jobs:
  build:
    name: build and upload artifacts
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            target: windows
            cc: x86_64-w64-mingw32-gcc
            cxx: CXX=x86_64-w64-mingw32-g++
          - os: ubuntu-20.04
            arch: amd64
            target: linux
            cc: gcc
            cxx: g++
          - os: macos-latest
            arch: amd64
            target: darwin
            cc: ""
            cxx: ""
          - os: macos-latest
            arch: arm64
            target: darwin
            cc: ""
            cxx: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: installing dependencies
        uses: ./.github/actions/install
        with:
          os: ${{ matrix.os }}
      - name: Update version
        run: echo -e "${GITHUB_REF_NAME}" > cmd/thyra-server/version.txt
      - name: Build binary for ${{ matrix.target }} on ${{ matrix.arch}}
        run: GOOS=${{ matrix.target }} GOARCH=${{ matrix.arch }} CGO_ENABLED=1 CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} go build -o thyra-server_${{ matrix.target }}_${{ matrix.arch }} ./cmd/thyra-server/
      - name: Create release and upload binaries
        if: ${{ inputs.tag_name != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag_name }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          generate_release_notes: ${{ inputs.generate_release_notes }}
          files: thyra-server_${{ matrix.target }}_${{ matrix.arch }}

  build-installer:
    if: ${{ (github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v') }}
    name: build and upload installers binaries
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x86_64
            target: windows
            script: scripts/windows_installer.py
            displayed_arch: amd64
            ext: .exe
          - os: macos-latest
            arch: x86_64
            target: darwin
            script: scripts/macos_installer.py
            displayed_arch: amd64
            ext: .tar.gz
          - os: macos-latest
            arch: arm64
            target: darwin
            script: scripts/macos_installer.py
            displayed_arch: arm64
            ext: .tar.gz
          - os: ubuntu-latest
            arch: amd64
            target: linux
            script: scripts/linux_installer.py
            displayed_arch: amd64
            ext: .tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pyinstaller
      - name: Build installer binary
        run: |
          pyinstaller --clean --onefile -y --target-arch ${{ matrix.arch }} --dist ./dist/${{ matrix.target }} --workpath /tmp ${{ matrix.script }} --name thyra-installer_${{ matrix.target }}_${{ matrix.displayed_arch }}
      - name: Archive installer binary
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          tar -czvf ./dist/${{ matrix.target }}/thyra-installer_${{ matrix.target }}_${{ matrix.displayed_arch }}${{ matrix.ext }} -C ./dist/${{ matrix.target }} thyra-installer_${{ matrix.target }}_${{ matrix.displayed_arch }}
      - name: Upload installer artifacts
        uses: actions/upload-artifact@v3
        with:
          name: thyra-installer-${{ matrix.target }}-${{ matrix.arch }}-binary
          path: |
            ./dist/${{ matrix.target }}/thyra-installer_${{ matrix.target }}_${{ matrix.displayed_arch }}${{ matrix.ext }}
      - name: Create release and upload binaries
        if: ${{ inputs.tag_name != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag_name }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          generate_release_notes: ${{ inputs.generate_release_notes }}
          files: |
            ./dist/${{ matrix.target }}/thyra-installer_${{ matrix.target }}_${{ matrix.displayed_arch }}${{ matrix.ext }}
