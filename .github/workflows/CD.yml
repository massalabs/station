name: CD

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Version to produce"
        required: true
      release-as-draft:
        description: "Whether it's a draft or not"
        required: true
        type: boolean
        default: true
      release-as-prerelease:
        description: "Whether it's a prerelease or not"
        required: true
        type: boolean
        default: false
      generate-release-notes:
        description: "Generate release notes"
        required: true
        type: boolean
        default: true

env:
  GO_VERSION: 1.19
  RELEASE_VERSION: ${{ github.event.inputs.release-version }}
  RELEASE_AS_DRAFT: ${{ github.event.inputs.release-as-draft }}
  RELEASE_AS_PRERELEASE: ${{ github.event.inputs.release-as-prerelease }}
  GENERATE_RELEASE_NOTES: ${{ github.event.inputs.generate-release-notes }}

jobs:
  build_windows_linux:
    name: build and upload linux and windows artifacts
    strategy:
      matrix:
        include:
          - arch: amd64
            os: windows
            cc: x86_64-w64-mingw32-gcc
            cxx: CXX=x86_64-w64-mingw32-g++
          - arch: amd64
            os: linux
            cc: gcc
            cxx: g++
    runs-on: ubuntu-latest
    steps:
      - name: installing dependencies
        run: sudo apt install -y libgl1-mesa-dev xorg-dev gcc-mingw-w64-x86-64
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: Build binary for ${{ matrix.os }} on ${{ matrix.arch}}
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=1 CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} go build -o thyra-server_${{ matrix.os }}_${{ matrix.arch }} ./cmd/thyra-server/
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: thyra-server_${{ matrix.os }}_${{ matrix.arch }}

  build_macos:
    name: build and upload macos artifacts
    strategy:
      matrix:
        include:
          - arch: amd64
            os: darwin
          - arch: arm64
            os: darwin
    runs-on: macos-latest
    steps:
      - name: Select the latest version of Xcode
        uses: devbotsxyz/xcode-select@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: Build binary for ${{ matrix.os }} on ${{ matrix.arch}}
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=1 go build -o thyra-server_${{ matrix.os }}_${{ matrix.arch }} ./cmd/thyra-server/
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: thyra-server_${{ matrix.os }}_${{ matrix.arch }}

  create-release:
    runs-on: ubuntu-latest
    name: Create release
    strategy:
      matrix:
        include:
          - arch: amd64
            os: windows
            cc: x86_64-w64-mingw32-gcc
            cxx: CXX=x86_64-w64-mingw32-g++
          - arch: amd64
            os: linux
            cc: gcc
            cxx: g++
          - arch: amd64
            os: darwin
          - arch: arm64
            os: darwin
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
      - name: Create release and upload binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          draft: ${{ env.RELEASE_AS_DRAFT }}
          prerelease: ${{ env.RELEASE_AS_PRERELEASE }}
          generate_release_notes: ${{ env.GENERATE_RELEASE_NOTES }}
          files: thyra-server_${{ matrix.os }}_${{ matrix.arch }}
