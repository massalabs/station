name: CI
on:
  push:
    tags:
      - v[0-9]+.*
    branches:
      - main
  pull_request:

permissions:
  contents: read

env:
  GO_VERSION: 1.19

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: installing dependencies
        run: sudo apt install -y libgl1-mesa-dev xorg-dev
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.0
          skip-cache: true
          args: --timeout=3m
        continue-on-error: false

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: installing dependencies
        run: sudo apt install -y libgl1-mesa-dev xorg-dev
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - run: go test ./... -coverprofile=coverage.coverprofile
      - uses: codecov/codecov-action@v3
        with:
          files: coverage.coverprofile

  build_windows_linux:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: build and upload linux and windows artifacts
    strategy:
      matrix:
        include:
          - arch: amd64
            os: windows
            cc: x86_64-w64-mingw32-gcc
            cxx: CXX=x86_64-w64-mingw32-g++
          - arch: amd64
            os: linux
            cc: gcc
            cxx: g++
    runs-on: ubuntu-latest
    steps:
      - name: installing dependencies
        run: sudo apt install -y libgl1-mesa-dev xorg-dev gcc-mingw-w64-x86-64
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: Build binary for ${{ matrix.os }} on ${{ matrix.arch}}
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=1 CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} go build -o thyra-server_${{ matrix.os }}_${{ matrix.arch }} ./cmd/thyra-server/
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: thyra-server_${{ matrix.os }}_${{ matrix.arch }}

  build_macos:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: build and upload macos artifacts
    strategy:
      matrix:
        include:
          - arch: amd64
            os: darwin
          - arch: arm64
            os: darwin
    runs-on: macos-latest
    steps:
      - name: Select the latest version of Xcode
        uses: devbotsxyz/xcode-select@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: Build binary for ${{ matrix.os }} on ${{ matrix.arch}}
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=1 go build -o thyra-server_${{ matrix.os }}_${{ matrix.arch }} ./cmd/thyra-server/
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: thyra-server_${{ matrix.os }}_${{ matrix.arch }}
