name: Sign a given file with DigiCert KeyLocker

description: Uses DigiCert KeyLocker (KSP + signtool) to sign a file.

inputs:
  file:
    required: true
    description: The file to sign
  name:
    required: true
    description: The name of the application to sign
  SM_API_KEY:
    required: true
    description: DigiCert API key
  SM_CLIENT_CERT_FILE_B64:
    required: true
    description: Base64-encoded client certificate (.p12)
  SM_CLIENT_CERT_PASSWORD:
    required: true
    description: Password for the client cert
  SM_HOST:
    required: true
    description: DigiCert ONE host URL (ex: https://clientauth.one.digicert.com)
  SM_CERT_FINGERPRINT:
    required: true
    description: Certificate fingerprint (SHA-1 thumbprint)

runs:
  using: "composite"
  steps:
    - name: Install DigiCert Client tools
      uses: digicert/ssm-code-signing@v1.0.0

    - name: Decode and save client certificate
      shell: bash
      run: |
        echo "${{ inputs.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > /d/client_cert.p12

    - name: Set environment variables
      shell: bash
      run: |
        echo "SM_API_KEY=${{ inputs.SM_API_KEY }}" >> "$GITHUB_ENV"
        echo "SM_CLIENT_CERT_PASSWORD=${{ inputs.SM_CLIENT_CERT_PASSWORD }}" >> "$GITHUB_ENV"
        echo "SM_CLIENT_CERT_FILE=D:\\client_cert.p12" >> "$GITHUB_ENV"
        echo "SM_HOST=${{ inputs.SM_HOST }}" >> "$GITHUB_ENV"
        echo "C:\\Program Files\\DigiCert\\DigiCert Keylocker Tools" >> $GITHUB_PATH
        echo "C:\\Program Files (x86)\\Windows Kits\\10\\App Certification Kit" >> $GITHUB_PATH
        echo "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools" >> $GITHUB_PATH

    - name: Sync certs to local Windows store
      shell: cmd
      run: smctl windows certsync

    - name: 🐛 Debug – List keypairs (smctl)
      shell: cmd
      run: smctl.exe keypair ls

    - name: 🐛 Debug – List KSP certs (certutil)
      shell: cmd
      run: certutil.exe -csp "DigiCert Signing Manager KSP" -key -user

    - name: 🐛 Debug – Show fingerprint expected
      shell: bash
      run: echo "🔐 Expecting fingerprint: ${{ inputs.SM_CERT_FINGERPRINT }}"

    - name: Sign file using signtool
      shell: cmd
      run: |
        echo Signing file ${{ inputs.file }} with cert fingerprint ${{ inputs.SM_CERT_FINGERPRINT }}
        signtool.exe sign ^
          /sha1 ${{ inputs.SM_CERT_FINGERPRINT }} ^
          /tr http://timestamp.digicert.com ^
          /td SHA256 ^
          /fd SHA256 ^
          "${{ inputs.file }}"

    - name: Verify signature
      shell: cmd
      run: signtool verify /v /pa "${{ inputs.file }}"