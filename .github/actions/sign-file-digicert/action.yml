name: Sign a given file with DigiCert KeyLocker

description: Uses DigiCert KeyLocker tools manually (no buggy GitHub action) to sign a file.

inputs:
  file:
    required: true
    description: The file to sign
  name:
    required: true
    description: The name of the application to sign
  SM_API_KEY:
    required: true
    description: DigiCert API key
  SM_CLIENT_CERT_FILE_B64:
    required: true
    description: Base64-encoded authentication certificate (.p12)
  SM_CLIENT_CERT_PASSWORD:
    required: true
    description: Password for the client cert
  SM_HOST:
    required: true
    description: DigiCert ONE host URL
  SM_CERT_FINGERPRINT:
    required: true
    description: Certificate fingerprint for signing

runs:
  using: "composite"
  steps:
    - name: Decode and save client certificate
      shell: pwsh
      run: |
        [System.IO.File]::WriteAllBytes("client_cert.p12", [System.Convert]::FromBase64String("${{ inputs.SM_CLIENT_CERT_FILE_B64 }}"))

    - name: Download smctl CLI
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://one.digicert.com/smctl/releases/latest/windows/smctl-windows-x64.zip" -OutFile "smctl.zip"
        Expand-Archive -Path "smctl.zip" -DestinationPath "smtools"
        Add-Content $env:GITHUB_PATH "$PWD\smtools"

    - name: Authenticate to DigiCert
      shell: pwsh
      run: |
        smctl auth login `
          --api-key "${{ inputs.SM_API_KEY }}" `
          --client-cert "client_cert.p12" `
          --cert-password "${{ inputs.SM_CLIENT_CERT_PASSWORD }}" `
          --host "${{ inputs.SM_HOST }}"

    - name: Sign the file
      shell: pwsh
      run: |
        smctl sign code-signing `
          --file "${{ inputs.file }}" `
          --name "${{ inputs.name }}" `
          --fingerprint "${{ inputs.SM_CERT_FINGERPRINT }}" `
          --ts-url "http://timestamp.globalsign.com/tsa/r6advanced1"
